{"version":3,"sources":["WorskopChoiceForm.js","Header.js","WorkshopOverview.js","Timer.js","ActivityCard.js","WorkshopWizard.js","Workout.js","index.js"],"names":["WorkshopChoiceForm","state","selectedWorkshops","availableWorkshops","workshops","handleChange","event","options","target","selected","i","length","element","push","value","setState","handleClick","activity","props","selectWorkshop","this","className","id","map","workshop","index","href","onClick","bind","Category","data-toggle","data-target","src","Image","alt","Component","Header","GoBackToStartPage","WorskshopOverview","startWorkshop","workshopActivities","filter","wks","Workshop","filteredActivities","shuffle","activities","slice","longRest","Object","assign","Name","Duration","IntervalBetweenRepetition","GifPath","NumberOfRepetition","count","forEach","shortRest","incoming","IntervalBetweenActivity","undefined","Incoming","selectedWorkshop","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","scope","key","role","Timer","seconds","Seconds","myInterval","setInterval","timerCompleted","clearInterval","SetNext","ActivityCard","Activity","isActive","IsActive","hasOwnProperty","WorkshopWizard","activeIndex","handleSelect","selectedIndex","setNext","next","console","log","Carousel","onSelect","interval","wrap","Activities","Item","Workout","activeComponent","component","goBackToStartPage","WorkshopOverview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22c6283a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport workshops from './data/workshops.json'\r\n\r\nclass WorkshopChoiceForm extends Component {\r\n    state = {\r\n        selectedWorkshops: [],\r\n        availableWorkshops: workshops\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { options } = event.target\r\n\r\n        var selected = [];\r\n        for (let i = 0; i < options.length; i++) {\r\n            const element = options[i];\r\n            if (element.selected) {\r\n                selected.push(element.value)\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            selectedWorkshops: selected\r\n        })\r\n    }\r\n\r\n    handleClick = activity => {\r\n        this.props.selectWorkshop(activity, \"WorkshopOverview\");\r\n    }\r\n\r\n    render() {\r\n        const workshops = this.state.availableWorkshops;\r\n        return (\r\n            <section className=\"page-section portfolio\" id=\"portfolio\">\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <h2 className=\"page-section-heading text-center text-uppercase text-secondary mb-0\">Ateliers</h2>\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        {workshops.map((workshop, index) => (\r\n                            <div className=\"col-md-6 col-lg-4 mb-5\">\r\n                                <a href=\"#\" onClick={this.handleClick.bind(null, workshop.Category)}>\r\n                                    <div className=\"portfolio-item mx-auto\" data-toggle=\"modal\"  data-target=\"#portfolioModal3\">\r\n                                        <div className=\"portfolio-item-caption d-flex align-items-center justify-content-center h-100 w-100\">\r\n                                            <div className=\"portfolio-item-caption-content text-center text-white\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                        </div>\r\n                                        <img className=\"img-fluid\" src={\"assets/img/\"+workshop.Image+\".png\"} alt=\"\" />\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkshopChoiceForm;","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg bg-secondary text-uppercase fixed-top\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand js-scroll-trigger\" href=\"#\" onClick={props.GoBackToStartPage.bind(null)}>Roro's Workout</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport activities from './data/activities.json'\r\nimport workshops from './data/workshops.json'\r\n\r\nclass WorskshopOverview extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        var workshop = workshops.filter((wks) => wks.Category == this.props.Workshop)[0];\r\n        var filteredActivities = this.shuffle(activities.filter((activity) => activity.Category === this.props.Workshop)).slice(0, 5)\r\n        var workshopActivities = [];\r\n        var longRest = Object.assign({}, filteredActivities[0]);\r\n        longRest.Name = \"Repos long\";\r\n        longRest.Duration = workshop.IntervalBetweenRepetition;\r\n        longRest.GifPath = \"rest\";\r\n\r\n        for (let index = 0; index < workshop.NumberOfRepetition; index++) {\r\n            var count = 0;\r\n            filteredActivities.forEach(activity => {\r\n                workshopActivities.push(activity);\r\n                count++;\r\n\r\n                if (activity != filteredActivities[filteredActivities.length - 1]){\r\n                    var shortRest = Object.assign({}, activity);\r\n                    var incoming = filteredActivities[count + 1];\r\n\r\n                    shortRest.Duration = workshop.IntervalBetweenActivity;\r\n                    shortRest.GifPath = \"rest\";\r\n                    shortRest.Name = \"Repos court\";\r\n\r\n                    if (incoming !== undefined){\r\n                        shortRest.Incoming = incoming.Name;\r\n                    }\r\n                    \r\n                    workshopActivities.push(shortRest)\r\n                }\r\n            });\r\n\r\n            workshopActivities.push(longRest);\r\n        }\r\n\r\n        this.state = {\r\n            filteredActivities: filteredActivities,\r\n            selectedWorkshop: workshop,\r\n            workshopActivities: workshopActivities\r\n        }\r\n    }\r\n\r\n    shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        while (0 !== currentIndex) {\r\n\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.startWorkshop(this.state.workshopActivities, \"WorkshopWizard\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"page-section\">\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <h2 className=\"text-center text-uppercase text-secondary mb-0\">{this.state.selectedWorkshop.Name}</h2>\r\n                    <h4 className=\"text-center text-secondary mb-0\">{this.state.selectedWorkshop.NumberOfRepetition} répétitions</h4>\r\n                    <h4 className=\"text-center text-secondary mb-0\">Repos : {this.state.selectedWorkshop.IntervalBetweenActivity}s - {this.state.selectedWorkshop.IntervalBetweenRepetition}s</h4>\r\n                    <br />\r\n                    <div className=\"col-md-12\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Activité</th>\r\n                                    <th className=\"right-col\" scope=\"col\">Durée</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.filteredActivities.map((activity, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{activity.Name}</td>\r\n                                        <td className=\"right-col\">{activity.Duration} secondes</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <a className=\"btn btn-primary\" href=\"#\" role=\"button\" onClick={this.handleClick.bind(null)}>Démarrer</a>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorskshopOverview","import React, { Component } from 'react'\r\n\r\nclass Timer extends Component {\r\n    state = {\r\n        seconds: this.props.Seconds,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                this.timerCompleted();\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    timerCompleted() {\r\n        this.props.SetNext();\r\n    }\r\n\r\n    render() {\r\n        const { seconds } = this.state\r\n        return (\r\n            <span>\r\n                {seconds === 0\r\n                    ? <span></span>\r\n                    : <span>{seconds < 10 ? `0${seconds}` : seconds} secondes restantes</span>\r\n                }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer","import React from 'react'\r\nimport Timer from './Timer'\r\n\r\nconst ActivityCard = props => {\r\n    const activity = props.Activity\r\n    const isActive = props.IsActive\r\n\r\n    return (\r\n        <div className=\"card mb-2\">\r\n            <img src={\"assets/exercices/\" + activity.GifPath + \".gif\"} className=\"card-img-top\" alt={activity.GifPath} />\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title text-center\">{activity.Name}</h4>\r\n                {isActive ? (\r\n                    <h3 className=\"card-text text-center\"><Timer Seconds={activity.Duration} SetNext={props.SetNext} /></h3>\r\n                ) : (<span></span>)}\r\n\r\n                {activity.hasOwnProperty('Incoming') ? (\r\n                    <h4 className=\"card-text text-center\">A venir : {activity.Incoming}</h4>\r\n                ) : (<h4></h4>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivityCard","import React, { Component } from 'react'\r\nimport ActivityCard from './ActivityCard'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nclass WorkshopWizard extends Component {\r\n    state = {\r\n        activeIndex: 0\r\n    }\r\n\r\n    handleSelect = (selectedIndex) => {\r\n        this.setState({ activeIndex: selectedIndex })\r\n    }\r\n\r\n    setNext = () => {\r\n        var next = this.state.activeIndex + 1;\r\n        console.log(next);\r\n        this.handleSelect(next);\r\n    }\r\n\r\n    render() {\r\n        var activeIndex = this.state.activeIndex;\r\n        return (\r\n            <section className=\"page-section bg-primary text-black mb-0\">\r\n                <div className=\"col-md-12\">\r\n                    <Carousel\r\n                        activeIndex={activeIndex}\r\n                        onSelect={this.handleSelect}\r\n                        interval={null}\r\n                        wrap=\"false\">\r\n                        {this.props.Activities.map((activity, index) => (\r\n                            <Carousel.Item key={index}>\r\n                                <ActivityCard\r\n                                    Activity={activity}\r\n                                    IsActive={(index === activeIndex) ? true : false}\r\n                                    SetNext={this.setNext} />\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WorkshopWizard   ","import React, { Component } from 'react';\r\nimport WorkshopChoiceForm from './WorskopChoiceForm'\r\nimport Header from './Header'\r\nimport WorkshopOverview from './WorkshopOverview'\r\nimport WorkshopWizard from './WorkshopWizard'\r\n\r\nclass Workout extends Component {\r\n    state = {\r\n        activeComponent: 'WorkshopChoiceForm',\r\n        selectedWorkshop: '',\r\n        workshopActivities: []\r\n    }\r\n\r\n    selectWorkshop = (activity, component) => {\r\n        this.setState({ selectedWorkshop: activity, activeComponent: component})\r\n    } \r\n\r\n    startWorkshop = (activities, component) => {\r\n        this.setState({\r\n            workshopActivities: activities,\r\n            activeComponent: component\r\n        })\r\n    }\r\n\r\n    goBackToStartPage = () => {\r\n        this.setState({\r\n            activeComponent: \"WorkshopChoiceForm\",\r\n            selectedWorkshop: '',\r\n            workshopActivities: []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var selectedWorkshop = this.state.selectedWorkshop\r\n        var activeComponent = this.state.activeComponent\r\n        var workshopActivities = this.state.workshopActivities\r\n\r\n        return (\r\n            <div>\r\n                <Header GoBackToStartPage={this.goBackToStartPage} />\r\n                <div id=\"container\">\r\n                    {activeComponent === 'WorkshopChoiceForm' ? (\r\n                        <WorkshopChoiceForm selectWorkshop={this.selectWorkshop} />\r\n                    ) : activeComponent === 'WorkshopOverview' ?  (\r\n                        <WorkshopOverview Workshop={selectedWorkshop} startWorkshop={this.startWorkshop} />\r\n                    ) : activeComponent === 'WorkshopWizard' ?  (\r\n                        <WorkshopWizard Activities={workshopActivities} />\r\n                    ) : (\r\n                        <WorkshopChoiceForm  />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Workout","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport Workout from './Workout'\nimport './index.css';\nimport './styles.css';\n//import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap'\n\nReactDOM.render(<Workout />, document.getElementById('page-top'))\n"],"sourceRoot":""}