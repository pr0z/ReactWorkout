{"version":3,"sources":["WorskopChoiceForm.js","Header.js","WorkshopOverview.js","Timer.js","WizardActivityStep.js","WorkshopWizard.js","Workout.js","index.js"],"names":["WorkshopChoiceForm","state","selectedWorkshops","availableWorkshops","workshops","handleChange","event","options","target","selected","i","length","element","push","value","setState","handleClick","activity","props","selectWorkshop","this","className","id","map","workshop","index","key","href","onClick","bind","Category","data-toggle","data-target","src","process","Image","alt","Component","Header","GoBackToStartPage","WorskshopOverview","startWorkshop","workshopActivities","filter","wks","Workshop","filteredActivities","shuffle","activities","slice","longRest","Object","assign","Name","Duration","IntervalBetweenRepetition","GifPath","sumActivity","reduce","accumulator","current","Number","parseInt","IntervalBetweenActivity","NumberOfRepetition","sumLongRest","totalDurationInMinutes","Math","ceil","workshopCount","activityCount","progress","forEach","copy","Progress","shortRest","incoming","undefined","Incoming","percentProgress","percent","Now","selectedWorkshop","array","temporaryValue","randomIndex","currentIndex","floor","random","scope","Timer","seconds","Seconds","myInterval","setInterval","IsRunning","timerCompleted","clearInterval","SetNext","Activity","WizardActivityStep","timerIsRunning","handleTimerStatusChange","isActive","ProgressBar","stripped","now","label","nextStep","hasOwnProperty","previousStep","size","WorkshopWizard","Activities","goBackToStartPage","Workout","activeComponent","component","WorkshopOverview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32206ef3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport workshops from './data/workshops.json'\r\n\r\nclass WorkshopChoiceForm extends Component {\r\n    state = {\r\n        selectedWorkshops: [],\r\n        availableWorkshops: workshops\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { options } = event.target\r\n\r\n        var selected = [];\r\n        for (let i = 0; i < options.length; i++) {\r\n            const element = options[i];\r\n            if (element.selected) {\r\n                selected.push(element.value)\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            selectedWorkshops: selected\r\n        })\r\n    }\r\n\r\n    handleClick = activity => {\r\n        this.props.selectWorkshop(activity, \"WorkshopOverview\");\r\n    }\r\n\r\n    render() {\r\n        const workshops = this.state.availableWorkshops;\r\n        return (\r\n            <section className=\"page-section portfolio\" id=\"portfolio\">\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <h2 className=\"page-section-heading text-center text-uppercase text-secondary mb-0\">Ateliers</h2>\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        {workshops.map((workshop, index) => (\r\n                            <div className=\"col-md-6 col-lg-4 mb-5\" key={index}>\r\n                                <a href=\"#\" onClick={this.handleClick.bind(null, workshop.Category)}>\r\n                                    <div className=\"portfolio-item mx-auto\" data-toggle=\"modal\"  data-target=\"#portfolioModal3\">\r\n                                        <div className=\"portfolio-item-caption d-flex align-items-center justify-content-center h-100 w-100\">\r\n                                            <div className=\"portfolio-item-caption-content text-center text-white\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                        </div>\r\n                                        <img className=\"img-fluid\" src={process.env.PUBLIC_URL + \"/assets/img/\"+workshop.Image+\".png\"} alt=\"\" />\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkshopChoiceForm;","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg bg-secondary text-uppercase fixed-top\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand js-scroll-trigger\" href=\"#\" onClick={props.GoBackToStartPage.bind(null)}>Roro's Workout</a>\r\n            </div>\r\n            <br />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport activities from './data/activities.json'\r\nimport workshops from './data/workshops.json'\r\n\r\nclass WorskshopOverview extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        var workshop = workshops.filter((wks) => wks.Category === this.props.Workshop)[0];\r\n        var filteredActivities = this.shuffle(activities.filter((activity) => activity.Category === this.props.Workshop)).slice(0, 5)\r\n        var workshopActivities = [];\r\n\r\n        var longRest = Object.assign({}, filteredActivities[0]);\r\n        longRest.Name = \"Repos long\";\r\n        longRest.Duration = workshop.IntervalBetweenRepetition;\r\n        longRest.GifPath = \"rest\";\r\n\r\n        var sumActivity = filteredActivities.reduce((accumulator, current) => {\r\n            return accumulator + Number.parseInt(current.Duration) + Number.parseInt(workshop.IntervalBetweenActivity);\r\n        }, 0) * workshop.NumberOfRepetition;\r\n        var sumLongRest = workshop.IntervalBetweenRepetition * workshop.NumberOfRepetition;\r\n\r\n        var totalDurationInMinutes = Math.ceil((sumActivity + sumLongRest) / 60);\r\n\r\n        var workshopCount = 0;\r\n        for (let index = 0; index < workshop.NumberOfRepetition; index++) {\r\n            ++workshopCount;\r\n            var activityCount = 0;\r\n            var progress = workshop.Name + \" \" + workshopCount + \"/\" + workshop.NumberOfRepetition\r\n\r\n            filteredActivities.forEach(activity => {\r\n                var copy = Object.assign({}, activity);\r\n                copy.Progress = progress;\r\n                workshopActivities.push(copy);\r\n\r\n                if (activity !== filteredActivities[filteredActivities.length - 1]) {\r\n                    var shortRest = Object.assign({}, copy);\r\n                    var incoming = filteredActivities[++activityCount];\r\n\r\n                    shortRest.Duration = workshop.IntervalBetweenActivity;\r\n                    shortRest.GifPath = \"rest\";\r\n                    shortRest.Name = \"Repos court\";\r\n\r\n                    if (incoming !== undefined) {\r\n                        shortRest.Incoming = incoming.Name;\r\n                    }\r\n\r\n                    workshopActivities.push(shortRest)\r\n                }\r\n            });\r\n\r\n            workshopActivities.push(Object.assign({}, longRest));\r\n        }\r\n\r\n        var percentProgress = 0;\r\n        workshopActivities.forEach(activity => {\r\n            var percent = Math.ceil(((++percentProgress) / workshopActivities.length) * 100);\r\n            activity.Now = percent;\r\n        });\r\n\r\n        this.state = {\r\n            filteredActivities: filteredActivities,\r\n            selectedWorkshop: workshop,\r\n            workshopActivities: workshopActivities,\r\n            totalDurationInMinutes: totalDurationInMinutes\r\n        }\r\n    }\r\n\r\n    shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        while (0 !== currentIndex) {\r\n\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.startWorkshop(this.state.workshopActivities, \"WorkshopWizard\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"page-section\">\r\n                <div className=\"container\">\r\n                    <h2 className=\"text-center text-uppercase text-secondary mb-0\">{this.state.selectedWorkshop.Name}</h2>\r\n                    <h4 className=\"text-center text-secondary mb-0\">{this.state.selectedWorkshop.NumberOfRepetition} répétitions - {this.state.totalDurationInMinutes} mn</h4>\r\n                    <h4 className=\"text-center text-secondary mb-0\">Repos : {this.state.selectedWorkshop.IntervalBetweenActivity}s - {this.state.selectedWorkshop.IntervalBetweenRepetition}s</h4>\r\n                    <br />\r\n                    <div className=\"col-md-12\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Activité</th>\r\n                                    <th className=\"right-col\" scope=\"col\">Durée</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.filteredActivities.map((activity, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{activity.Name}</td>\r\n                                        <td className=\"right-col\">{activity.Duration}s</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <button className=\"btn btn-primary w-100\" onClick={this.handleClick.bind(null)}>Démarrer</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorskshopOverview","import React, { Component } from 'react'\r\n\r\nclass Timer extends Component {\r\n    state = {\r\n        seconds: this.props.Seconds,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds } = this.state\r\n            \r\n            if (seconds > 0) {\r\n                if (this.props.IsRunning){\r\n                    this.setState(({ seconds }) => ({\r\n                        seconds: seconds - 1\r\n                    }))\r\n                }\r\n            }\r\n            if (seconds === 0) {\r\n                this.timerCompleted();\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    timerCompleted() {\r\n        this.props.SetNext();\r\n        this.props.timerCompleted(this.props.Activity);\r\n    }\r\n\r\n    render() {\r\n        const { seconds } = this.state\r\n        return (\r\n            <span>\r\n                {seconds === 0\r\n                    ? <span></span>\r\n                    : <span>{seconds < 10 ? `0${seconds}` : seconds} secondes restantes</span>\r\n                }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer","import React, { Component } from 'react'\r\nimport Timer from './Timer'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nclass WizardActivityStep extends Component {\r\n\r\n    state = {\r\n        activity: this.props.Activity,\r\n        timerIsRunning: true\r\n    }\r\n\r\n    handleTimerStatusChange = () => {\r\n        if (this.state.timerIsRunning) {\r\n            this.setState({\r\n                timerIsRunning: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                timerIsRunning: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const activity = this.state.activity;\r\n        const isActive = this.props.isActive;\r\n\r\n        return (\r\n            <div className=\"activity-container\">\r\n                <div className=\"row h-50\">\r\n                    <img src={process.env.PUBLIC_URL + \"/assets/exercices/\" + activity.GifPath + \".gif\"} className=\"h-100 w-100\" alt={activity.GifPath} />\r\n                    <ProgressBar stripped=\"true\" now={activity.Now} label={`${activity.Now}%`} />\r\n                </div>\r\n                <div className=\"row h-25\">\r\n                    <div className=\"col-md-12\">\r\n                        <br />\r\n                        <h3 className=\"text-center\">{activity.Name}</h3>\r\n                        <h3 className=\"text-center\">{activity.Progress}</h3>\r\n                        {isActive ? (\r\n                            <span>\r\n                                <h3 className=\"text-center\">\r\n                                    <Timer Seconds={activity.Duration} Activity={activity} SetNext={this.props.nextStep} IsRunning={this.state.timerIsRunning} timerCompleted={this.props.timerCompleted} />\r\n                                </h3>\r\n                            </span>\r\n                        ) : (<span></span>)}\r\n                        {activity.hasOwnProperty('Incoming') ? (\r\n                            <h3 className=\"text-center\">A venir : {activity.Incoming}</h3>\r\n                        ) : (<span></span>)}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div className=\"row h-25\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <button onClick={this.props.previousStep} className=\"btn btn-primary btn-circle btn-md\">\r\n                            <Icon.ChevronLeft\r\n                                size={16} />\r\n                        </button>&nbsp;\r\n                        <button onClick={this.props.GoBackToStartPage} className=\"btn btn-primary btn-circle btn-md\">\r\n                            <Icon.Stop\r\n                                size={16} />\r\n                        </button>&nbsp;\r\n                        <button onClick={this.handleTimerStatusChange} className=\"btn btn-primary btn-circle btn-md\">\r\n                            {this.state.timerIsRunning ?\r\n                                <Icon.Pause size={16} /> :\r\n                                <Icon.Play size={16} />\r\n                            }\r\n                        </button>&nbsp;\r\n                        <button onClick={this.props.nextStep} className=\"btn btn-primary btn-circle btn-md\">\r\n                            <Icon.ChevronRight\r\n                                size={16} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WizardActivityStep","import React, { Component } from 'react'\r\nimport WizardActivityStep from './WizardActivityStep'\r\nimport StepWizard from 'react-step-wizard';\r\n\r\nclass WorkshopWizard extends Component {\r\n\r\n    timerCompleted = (activity) => {\r\n        if (activity.Name === this.props.Activities[this.props.Activities.length - 1].Name && activity.Now === 100){\r\n            this.props.goBackToStartPage();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12 h-100\">\r\n                <StepWizard>\r\n                    {this.props.Activities.map((activity, index) => (\r\n                        <WizardActivityStep\r\n                            key={index}\r\n                            Activity={activity}\r\n                            GoBackToStartPage={this.props.goBackToStartPage}\r\n                            timerCompleted={this.timerCompleted.bind(activity)} />\r\n                    ))}\r\n                </StepWizard>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WorkshopWizard   ","import React, { Component } from 'react';\r\nimport WorkshopChoiceForm from './WorskopChoiceForm'\r\nimport Header from './Header'\r\nimport WorkshopOverview from './WorkshopOverview'\r\nimport WorkshopWizard from './WorkshopWizard'\r\n\r\nclass Workout extends Component {\r\n    state = {\r\n        activeComponent: 'WorkshopChoiceForm',\r\n        selectedWorkshop: '',\r\n        workshopActivities: []\r\n    }\r\n\r\n    selectWorkshop = (activity, component) => {\r\n        this.setState({ selectedWorkshop: activity, activeComponent: component })\r\n    }\r\n\r\n    startWorkshop = (activities, component) => {\r\n        this.setState({\r\n            workshopActivities: activities,\r\n            activeComponent: component\r\n        })\r\n    }\r\n\r\n    goBackToStartPage = () => {\r\n        this.setState({\r\n            activeComponent: \"WorkshopChoiceForm\",\r\n            selectedWorkshop: '',\r\n            workshopActivities: []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var selectedWorkshop = this.state.selectedWorkshop\r\n        var activeComponent = this.state.activeComponent\r\n        var workshopActivities = this.state.workshopActivities\r\n\r\n        return (\r\n                <div id=\"container\" className=\"h-100\">\r\n                    {activeComponent === 'WorkshopChoiceForm' ? (\r\n                        <span>\r\n                            <Header GoBackToStartPage={this.goBackToStartPage} />\r\n                            <WorkshopChoiceForm selectWorkshop={this.selectWorkshop} /></span>\r\n                    ) : activeComponent === 'WorkshopOverview' ? (\r\n                        <span>\r\n                            <Header GoBackToStartPage={this.goBackToStartPage} />\r\n                        <WorkshopOverview Workshop={selectedWorkshop} startWorkshop={this.startWorkshop} /></span>\r\n                    ) : activeComponent === 'WorkshopWizard' ? (\r\n                            <WorkshopWizard Activities={workshopActivities} goBackToStartPage={this.goBackToStartPage} />   \r\n                    ) : (\r\n                                    <WorkshopChoiceForm />\r\n                                )}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Workout","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport Workout from './Workout'\nimport './index.css';\nimport './styles.css';\nimport 'bootstrap/dist/js/bootstrap'\n\nReactDOM.render(<Workout />, document.getElementById('page-top'))\n"],"sourceRoot":""}